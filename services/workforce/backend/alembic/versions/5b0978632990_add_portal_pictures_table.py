"""add portal_pictures table

Revision ID: 5b0978632990
Revises: e3f16aa7ff38
Create Date: 2025-08-30 04:54:28.679056

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '5b0978632990'
down_revision: Union[str, Sequence[str], None] = 'e3f16aa7ff38'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_permissions_id'), table_name='permissions')
    op.drop_index(op.f('ix_permissions_role'), table_name='permissions')
    op.drop_index(op.f('ix_permissions_user_id'), table_name='permissions')
    op.drop_table('permissions')
    op.drop_index(op.f('ix_message_recipients_receiver_role'), table_name='message_recipients')
    op.drop_table('message_recipients')
    op.drop_index(op.f('ix_message_responses_id'), table_name='message_responses')
    op.drop_table('message_responses')
    op.drop_index(op.f('ix_messages_id'), table_name='messages')
    op.drop_table('messages')
    op.create_unique_constraint(None, 'departments', ['name'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'departments', type_='unique')
    op.create_table('messages',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('messages_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('sender_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('content_type', postgresql.ENUM('pdf', 'image', 'video', 'poll', name='contenttype'), autoincrement=False, nullable=True),
    sa.Column('content_url', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('text', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['sender_id'], ['users.id'], name='messages_sender_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='messages_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index(op.f('ix_messages_id'), 'messages', ['id'], unique=False)
    op.create_table('message_responses',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('message_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('responder_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('acknowledged', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('text', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['message_id'], ['messages.id'], name=op.f('message_responses_message_id_fkey')),
    sa.ForeignKeyConstraint(['responder_id'], ['users.id'], name=op.f('message_responses_responder_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('message_responses_pkey'))
    )
    op.create_index(op.f('ix_message_responses_id'), 'message_responses', ['id'], unique=False)
    op.create_table('message_recipients',
    sa.Column('message_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('receiver_role', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['message_id'], ['messages.id'], name=op.f('message_recipients_message_id_fkey')),
    sa.PrimaryKeyConstraint('message_id', 'receiver_role', name=op.f('message_recipients_pkey'))
    )
    op.create_index(op.f('ix_message_recipients_receiver_role'), 'message_recipients', ['receiver_role'], unique=False)
    op.create_table('permissions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('role', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('resource', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('can_access', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('permissions_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('permissions_pkey'))
    )
    op.create_index(op.f('ix_permissions_user_id'), 'permissions', ['user_id'], unique=False)
    op.create_index(op.f('ix_permissions_role'), 'permissions', ['role'], unique=False)
    op.create_index(op.f('ix_permissions_id'), 'permissions', ['id'], unique=False)
    # ### end Alembic commands ###
