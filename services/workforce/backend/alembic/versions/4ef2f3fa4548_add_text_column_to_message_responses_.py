"""Add text column to message_responses table

Revision ID: 4ef2f3fa4548
Revises: abc123def456
Create Date: 2025-08-28 11:54:16.418748

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '4ef2f3fa4548'
down_revision: Union[str, Sequence[str], None] = 'abc123def456'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Correctly drop the old unique constraint if it exists.
    # The name of the constraint is what was auto-generated before.
    op.drop_constraint('uq_departments_church_name', 'departments', type_='unique')

    # Add the correct composite unique constraint
    op.create_unique_constraint('uq_departments_church_name', 'departments', ['church_id', 'name'])

    # Add the 'text' column to the 'message_responses' table
    op.add_column('message_responses', sa.Column('text', sa.String(), nullable=True))

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###

    # Drop the new unique constraint
    op.drop_constraint('uq_departments_church_name', 'departments', type_='unique')

    # Re-create the old unique constraint if it was different
    op.create_unique_constraint(op.f('uq_departments_church_name'), 'departments', ['church_id', 'name'], postgresql_nulls_not_distinct=False)

    # Drop the 'text' column from the 'message_responses' table
    op.drop_column('message_responses', 'text')

    # ### end Alembic commands ###
